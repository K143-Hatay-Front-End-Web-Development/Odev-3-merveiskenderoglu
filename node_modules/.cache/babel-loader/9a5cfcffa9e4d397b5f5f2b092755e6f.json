{"ast":null,"code":"var _jsxFileName = \"/home/merve/Desktop/math_game/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Question, AnswerCircle1, AnswerCircle2, AnswerCircle3, QuestionFace, TrueFace, FalseFace } from '../../assets/svg';\nimport styles from './game.module.css';\nimport { Context } from '../../context/Context';\nimport { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  var _questions$questionCo6, _questions$questionCo7, _questions$questionCo8;\n\n  const {\n    tour,\n    points,\n    questionCount,\n    createQuestions,\n    operator,\n    questions,\n    checkAnswer,\n    btnId,\n    boardQuestion,\n    bgColor,\n    btnClicked,\n    face,\n    showQuestions,\n    trueAnswerCount,\n    setFinal\n  } = useContext(Context);\n  useEffect(() => {\n    createQuestions(operator);\n  }, []);\n  const [fillObj, setFillObj] = useState({\n    a1: 'white',\n    a2: 'white',\n    a3: 'white'\n  });\n\n  const changeFillColors = (switchMain, switchKey1, switchKey2, colorName) => {\n    switch (switchMain) {\n      case switchKey1:\n        setFillObj(prevState => ({ ...prevState,\n          a1: colorName\n        }));\n        break;\n\n      case switchKey2:\n        setFillObj(prevState => ({ ...prevState,\n          a2: colorName\n        }));\n        break;\n\n      default:\n        setFillObj(prevState => ({ ...prevState,\n          a3: colorName\n        }));\n    }\n  };\n\n  useEffect(() => {\n    if (btnId !== null) {\n      var _questions$questionCo, _questions$questionCo2;\n\n      changeFillColors(btnId, 0, 1, 'black');\n\n      if (((_questions$questionCo = questions[questionCount]) === null || _questions$questionCo === void 0 ? void 0 : _questions$questionCo.result) !== ((_questions$questionCo2 = questions[questionCount]) === null || _questions$questionCo2 === void 0 ? void 0 : _questions$questionCo2.choices[btnId])) {\n        var _questions$questionCo3, _questions$questionCo4, _questions$questionCo5;\n\n        changeFillColors((_questions$questionCo3 = questions[questionCount]) === null || _questions$questionCo3 === void 0 ? void 0 : _questions$questionCo3.result, (_questions$questionCo4 = questions[questionCount]) === null || _questions$questionCo4 === void 0 ? void 0 : _questions$questionCo4.choices[0], (_questions$questionCo5 = questions[questionCount]) === null || _questions$questionCo5 === void 0 ? void 0 : _questions$questionCo5.choices[1], 'green');\n      }\n    } else {\n      setFillObj({\n        a1: 'white',\n        a2: 'white',\n        a3: 'white'\n      });\n    }\n  }, [btnId]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (questionCount > 9) {\n      // setTotalResultToStorage();\n      setFinal();\n      navigate('/end');\n    }\n  }, [questionCount]);\n  console.log(showQuestions);\n  console.log(trueAnswerCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: bgColor\n    },\n    className: styles.game,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Puan :\", points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Tur :\", tour]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Soru :\", questionCount + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        text: boardQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), face === true ? /*#__PURE__*/_jsxDEV(TrueFace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }, this) : face === false ? /*#__PURE__*/_jsxDEV(FalseFace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 61\n      }, this) : /*#__PURE__*/_jsxDEV(QuestionFace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 76\n      }, this), /*#__PURE__*/_jsxDEV(AnswerCircle1, {\n        clicked: btnClicked,\n        fill: fillObj.a1,\n        checkAnswer: checkAnswer,\n        text: (_questions$questionCo6 = questions[questionCount]) === null || _questions$questionCo6 === void 0 ? void 0 : _questions$questionCo6.choices[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AnswerCircle2, {\n        clicked: btnClicked,\n        fill: fillObj.a2,\n        checkAnswer: checkAnswer,\n        text: (_questions$questionCo7 = questions[questionCount]) === null || _questions$questionCo7 === void 0 ? void 0 : _questions$questionCo7.choices[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AnswerCircle3, {\n        clicked: btnClicked,\n        fill: fillObj.a3,\n        checkAnswer: checkAnswer,\n        text: (_questions$questionCo8 = questions[questionCount]) === null || _questions$questionCo8 === void 0 ? void 0 : _questions$questionCo8.choices[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"VhZpuDOAN5tbdJIb7PY7zUOw0Vo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","Question","AnswerCircle1","AnswerCircle2","AnswerCircle3","QuestionFace","TrueFace","FalseFace","styles","Context","useContext","useState","useNavigate","Game","tour","points","questionCount","createQuestions","operator","questions","checkAnswer","btnId","boardQuestion","bgColor","btnClicked","face","showQuestions","trueAnswerCount","setFinal","fillObj","setFillObj","a1","a2","a3","changeFillColors","switchMain","switchKey1","switchKey2","colorName","prevState","result","choices","navigate","console","log","backgroundColor","game","header"],"sources":["/home/merve/Desktop/math_game/src/components/Game/Game.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Question, AnswerCircle1, AnswerCircle2, AnswerCircle3, QuestionFace, TrueFace, FalseFace} from '../../assets/svg';\nimport styles from './game.module.css';\nimport { Context } from '../../context/Context';\nimport { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst Game = () => {\n\nconst {tour,points,questionCount,createQuestions,operator,questions, checkAnswer, btnId,boardQuestion, bgColor,btnClicked ,face, showQuestions, trueAnswerCount, setFinal} = useContext(Context);\n\nuseEffect(() => {\n  createQuestions(operator);\n},[])\n\n\nconst [fillObj, setFillObj] = useState({ a1: 'white', a2: 'white', a3: 'white' });\n\nconst changeFillColors = (switchMain, switchKey1, switchKey2, colorName) => {\n  switch (switchMain) {\n    case switchKey1:\n      setFillObj(prevState => ({ ...prevState, a1: colorName }));\n      break;\n    case switchKey2:\n      setFillObj(prevState => ({ ...prevState, a2: colorName }));\n      break;\n    default:\n      setFillObj(prevState => ({ ...prevState, a3: colorName }));\n  }\n};\n\nuseEffect(() => {\n  if (btnId !== null) {\n    changeFillColors(btnId, 0, 1, 'black');\n\n    if (questions[questionCount]?.result !== questions[questionCount]?.choices[btnId]) {\n      changeFillColors(questions[questionCount]?.result, questions[questionCount]?.choices[0], questions[questionCount]?.choices[1], 'green');\n    }\n\n  } else {\n    setFillObj({ a1: 'white', a2: 'white', a3: 'white' });\n  }\n}, [btnId]);\n\nconst navigate = useNavigate();\n\nuseEffect(() => {\n  if ((questionCount) > 9) {\n    // setTotalResultToStorage();\n    setFinal();\n    navigate('/end');\n  }\n}, [questionCount]);\n\nconsole.log(showQuestions);\nconsole.log(trueAnswerCount);\n\n  return (\n    <div style = {{backgroundColor : bgColor}} className={styles.game}>\n        <div className={styles.header}>\n            <h3>Puan :{points}</h3>\n            <h3>Tur :{tour}</h3>\n            <h3>Soru :{questionCount+1}</h3>\n        </div>\n        <div >\n            <Question text={boardQuestion}/>\n            {(face ===true)? <TrueFace/> : (face ===false)? <FalseFace/> : <QuestionFace />}\n            <AnswerCircle1 clicked={btnClicked}fill={fillObj.a1} checkAnswer={checkAnswer} text={questions[questionCount]?.choices[0]}/>\n            <AnswerCircle2 clicked={btnClicked} fill={fillObj.a2} checkAnswer={checkAnswer} text={questions[questionCount]?.choices[1]}/>\n            <AnswerCircle3 clicked={btnClicked} fill={fillObj.a3} checkAnswer={checkAnswer} text={questions[questionCount]?.choices[2]}/>\n        </div>\n    </div>\n  )\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module"}