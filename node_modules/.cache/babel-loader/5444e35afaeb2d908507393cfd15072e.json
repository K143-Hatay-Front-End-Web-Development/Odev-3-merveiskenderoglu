{"ast":null,"code":"var _jsxFileName = \"/home/merve/Desktop/math_game/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\n\nconst Provider = props => {\n  _s();\n\n  const [operator, setOperator] = useState(\"\");\n  const [points, setPoints] = useState(0);\n  const [tour, setTour] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [questionCount, setQuestionCount] = useState(0);\n  const navigate = useNavigate();\n\n  const startGame = () => {\n    if (!operator) {\n      return;\n    }\n\n    if (operator) {\n      setTour(tour + 1);\n      navigate('/play');\n    }\n  };\n\n  const createQuestions = operator => {\n    const newArr = []; // Add quiz questions to the array depending on the operator.\n    // This creates 10 questions for selected operator.\n\n    for (let i = 0; i < 10; i++) {\n      if (operator === 'add') {// newArr.push(addQuestion());\n      } else if (operator === 'substract') {// newArr.push(substractQuestion());\n      } else if (operator === 'multiply') {// newArr.push(multiplyQuestion());\n      } else if (operator === 'divide') {// newArr.push(divideQuestion());\n      }\n    }\n\n    setQuestions(newArr);\n  };\n\n  const randomNumber = (lowerLimit, upperLimit) => {\n    return Math.floor(Math.random() * upperLimit) + lowerLimit;\n  }; //creating addition questions\n\n\n  let choices = [];\n\n  const addQuestion = () => {\n    let num1 = randomNumber(1, 98);\n    let num2 = randomNumber(1, 98 - choice1);\n    let result = num1 + num2;\n    choices = {};\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      operator,\n      setOperator,\n      startGame,\n      points,\n      setPoints,\n      tour,\n      setTour,\n      questions,\n      setQuestions,\n      questionCount,\n      setQuestionCount,\n      createQuestions\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Provider, \"aSEHCsu6eWKgviWEIY21tk/mXzs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","createContext","useState","useNavigate","Context","Provider","props","operator","setOperator","points","setPoints","tour","setTour","questions","setQuestions","questionCount","setQuestionCount","navigate","startGame","createQuestions","newArr","i","randomNumber","lowerLimit","upperLimit","Math","floor","random","choices","addQuestion","num1","num2","choice1","result","children"],"sources":["/home/merve/Desktop/math_game/src/context/Context.js"],"sourcesContent":["import React, { createContext } from 'react'\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nexport const Context = createContext();\n\n\nconst Provider = (props) => {\n\n    const [operator,setOperator] = useState(\"\");\n    const [points,setPoints] = useState(0);\n    const [tour,setTour] = useState(0);\n    const [questions,setQuestions] = useState([]);\n    const [questionCount, setQuestionCount] = useState(0);\n\n    const navigate = useNavigate();\n\n    const startGame = () => {\n        if(!operator){\n        return;\n        }\n\n        if(operator){\n            setTour(tour+1);\n            navigate ('/play');\n        }\n    };\n\n\n\n    const createQuestions = (operator) => {\n        const newArr = []; \n    \n        // Add quiz questions to the array depending on the operator.\n        // This creates 10 questions for selected operator.\n        for (let i = 0; i < 10; i++) {\n          if (operator === 'add') {\n            // newArr.push(addQuestion());\n          } else if (operator === 'substract') {\n            // newArr.push(substractQuestion());\n          } else if (operator === 'multiply') {\n            // newArr.push(multiplyQuestion());\n          } else if (operator === 'divide') {\n            // newArr.push(divideQuestion());\n          }\n        }\n    \n        setQuestions(newArr);\n    };\n\n    const randomNumber = (lowerLimit,upperLimit) => {\n        return Math.floor(Math.random()*upperLimit)+lowerLimit;\n    };\n\n\n\n    //creating addition questions\n    let choices = [];\n\n    const addQuestion = () => {\n        let num1 = randomNumber(1,98);\n        let num2 = randomNumber(1,98-choice1);\n        let result = num1 + num2;\n\n        choices = {}\n\n       \n    }\n\n    \n\n    return(\n        <Context.Provider \n        value={{\n            operator,\n            setOperator, \n            startGame,\n            points,\n            setPoints,\n            tour,\n            setTour,\n            questions,\n            setQuestions,\n            questionCount,\n            setQuestionCount,\n            createQuestions\n        }}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n\nexport default Provider;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AACA,OAAO,MAAMC,OAAO,gBAAGH,aAAa,EAA7B;;AAGP,MAAMI,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,CAAD,CAAnC;EACA,MAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,CAAD,CAA/B;EACA,MAAM,CAACW,SAAD,EAAWC,YAAX,IAA2BZ,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAlD;EAEA,MAAMe,QAAQ,GAAGd,WAAW,EAA5B;;EAEA,MAAMe,SAAS,GAAG,MAAM;IACpB,IAAG,CAACX,QAAJ,EAAa;MACb;IACC;;IAED,IAAGA,QAAH,EAAY;MACRK,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;MACAM,QAAQ,CAAE,OAAF,CAAR;IACH;EACJ,CATD;;EAaA,MAAME,eAAe,GAAIZ,QAAD,IAAc;IAClC,MAAMa,MAAM,GAAG,EAAf,CADkC,CAGlC;IACA;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3B,IAAId,QAAQ,KAAK,KAAjB,EAAwB,CACtB;MACD,CAFD,MAEO,IAAIA,QAAQ,KAAK,WAAjB,EAA8B,CACnC;MACD,CAFM,MAEA,IAAIA,QAAQ,KAAK,UAAjB,EAA6B,CAClC;MACD,CAFM,MAEA,IAAIA,QAAQ,KAAK,QAAjB,EAA2B,CAChC;MACD;IACF;;IAEDO,YAAY,CAACM,MAAD,CAAZ;EACH,CAlBD;;EAoBA,MAAME,YAAY,GAAG,CAACC,UAAD,EAAYC,UAAZ,KAA2B;IAC5C,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,UAAzB,IAAqCD,UAA5C;EACH,CAFD,CA3CwB,CAiDxB;;;EACA,IAAIK,OAAO,GAAG,EAAd;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACtB,IAAIC,IAAI,GAAGR,YAAY,CAAC,CAAD,EAAG,EAAH,CAAvB;IACA,IAAIS,IAAI,GAAGT,YAAY,CAAC,CAAD,EAAG,KAAGU,OAAN,CAAvB;IACA,IAAIC,MAAM,GAAGH,IAAI,GAAGC,IAApB;IAEAH,OAAO,GAAG,EAAV;EAGH,CARD;;EAYA,oBACI,QAAC,OAAD,CAAS,QAAT;IACA,KAAK,EAAE;MACHrB,QADG;MAEHC,WAFG;MAGHU,SAHG;MAIHT,MAJG;MAKHC,SALG;MAMHC,IANG;MAOHC,OAPG;MAQHC,SARG;MASHC,YATG;MAUHC,aAVG;MAWHC,gBAXG;MAYHG;IAZG,CADP;IAAA,UAeKb,KAAK,CAAC4B;EAfX;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CAnFD;;GAAM7B,Q;UAQeF,W;;;KARfE,Q;AAqFN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}