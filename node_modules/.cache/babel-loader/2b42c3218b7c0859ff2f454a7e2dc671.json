{"ast":null,"code":"var _jsxFileName = \"/home/merve/Desktop/math_game/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nconst navigate = useNavigate();\n\nconst Provider = props => {\n  _s();\n\n  const [operator, setOperator] = useState(\"\");\n  const [points, setPoints] = useState(0);\n  const [tour, setTour] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [questionCount, setQuestionCount] = useState(0);\n\n  const startGame = () => {\n    if (!operator) {\n      return;\n    }\n\n    if (operator) {\n      setTour(tour + 1);\n      navigate;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      operator,\n      setOperator,\n      startGame,\n      points,\n      setPoints,\n      tour,\n      setTour,\n      questions,\n      setQuestions,\n      questionCount,\n      setQuestionCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Provider, \"vQ1w/dPi36qy5pU3fOhaxMN/xTM=\");\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","createContext","useState","useNavigate","Context","navigate","Provider","props","operator","setOperator","points","setPoints","tour","setTour","questions","setQuestions","questionCount","setQuestionCount","startGame","children"],"sources":["/home/merve/Desktop/math_game/src/context/Context.js"],"sourcesContent":["import React, { createContext } from 'react'\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Context = createContext();\nconst navigate = useNavigate();\n\nconst Provider = (props) => {\n\n const [operator,setOperator] = useState(\"\");\n const [points,setPoints] = useState(0);\n const [tour,setTour] = useState(0);\n const [questions,setQuestions] = useState([]);\n const [questionCount, setQuestionCount] = useState(0);\n\n const startGame = () => {\n    if(!operator){\n      return;\n    }\n\n    if(operator){\n        setTour(tour+1);\n\n        navigate \n    }\n\n    \n }\n\n\n\n    return(\n        <Context.Provider \n        value={{\n            operator,\n            setOperator, \n            startGame,\n            points,\n            setPoints,\n            tour,\n            setTour,\n            questions,\n            setQuestions,\n            questionCount,\n            setQuestionCount\n        }}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n\nexport default Provider;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,OAAO,gBAAGH,aAAa,EAA7B;AACP,MAAMI,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACQ,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,CAAD,CAAnC;EACA,MAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,CAAD,CAA/B;EACA,MAAM,CAACY,SAAD,EAAWC,YAAX,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAlD;;EAEA,MAAMgB,SAAS,GAAG,MAAM;IACrB,IAAG,CAACV,QAAJ,EAAa;MACX;IACD;;IAED,IAAGA,QAAH,EAAY;MACRK,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;MAEAP,QAAQ;IACX;EAGH,CAZD;;EAgBG,oBACI,QAAC,OAAD,CAAS,QAAT;IACA,KAAK,EAAE;MACHG,QADG;MAEHC,WAFG;MAGHS,SAHG;MAIHR,MAJG;MAKHC,SALG;MAMHC,IANG;MAOHC,OAPG;MAQHC,SARG;MASHC,YATG;MAUHC,aAVG;MAWHC;IAXG,CADP;IAAA,UAcKV,KAAK,CAACY;EAdX;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CA1CD;;GAAMb,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}